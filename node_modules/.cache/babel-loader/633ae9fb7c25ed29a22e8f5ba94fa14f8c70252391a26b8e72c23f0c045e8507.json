{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects Ulbi\\\\redux-toolkit-typescript-3\\\\src\\\\pages\\\\TodoApiPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport { todoApi } from \"../services/TodoService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoApiPage = () => {\n  _s();\n  const {\n    data: totalCountElem\n  } = todoApi.useGetAllTodosQuery();\n  let totalCount = 0;\n  if (totalCountElem) {\n    totalCount = totalCountElem.length;\n  }\n\n  // Получаем данные по параметрам, установленным в postPaginationAPI в эндпоинте:\n  // getPostsPagination: query: (page: number = 1, limit: number = 10)\n  const [page, setPage] = useState(1);\n  const [limit, setLimit] = useState(10);\n  // Вычисляем количество страниц\n  let countPage = Math.ceil(totalCount / limit);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"card mt-6\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"textCenter\",\n          children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0434\\u0435\\u043B \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439 \\u0438\\u0437 todoAPI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoApiPage, \"lWaDg75duXooA3qhj4hkIjDscH0=\", false, function () {\n  return [todoApi.useGetAllTodosQuery];\n});\n_c = TodoApiPage;\nexport default TodoApiPage;\nvar _c;\n$RefreshReg$(_c, \"TodoApiPage\");","map":{"version":3,"names":["React","useState","Container","Row","todoApi","jsxDEV","_jsxDEV","TodoApiPage","_s","data","totalCountElem","useGetAllTodosQuery","totalCount","length","page","setPage","limit","setLimit","countPage","Math","ceil","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Projects Ulbi/redux-toolkit-typescript-3/src/pages/TodoApiPage.tsx"],"sourcesContent":["import React, { FC, useState } from \"react\";\r\nimport { Container, Row, Button } from \"react-bootstrap\";\r\nimport { todoApi } from \"../services/TodoService\";\r\nimport TodoItem from \"../components/items/TodoItem\";\r\nimport { IFilter, ITodo, IOption } from \"../models/types\";\r\nimport PaginationButtons from \"../components/ui/PaginationButtons\";\r\nimport SortFilter from \"../components/SortFilter\";\r\n\r\nconst TodoApiPage = () => {\r\n  const { data: totalCountElem } = todoApi.useGetAllTodosQuery();\r\n  let totalCount = 0;\r\n\r\n  if (totalCountElem) {\r\n    totalCount = totalCountElem.length;\r\n  }\r\n\r\n  // Получаем данные по параметрам, установленным в postPaginationAPI в эндпоинте:\r\n  // getPostsPagination: query: (page: number = 1, limit: number = 10)\r\n  const [page, setPage] = useState<number>(1);\r\n  const [limit, setLimit] = useState<number>(10);\r\n  // Вычисляем количество страниц\r\n  let countPage: number = Math.ceil(totalCount / limit);\r\n\r\n  return (\r\n    <Container className=\"card mt-6\">\r\n      <Row>\r\n        <div>\r\n          <h1 className=\"textCenter\">Список дел пользователей из todoAPI</h1>\r\n        </div>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TodoApiPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAQC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,EAAEC,GAAG,QAAgB,iBAAiB;AACxD,SAASC,OAAO,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMlD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC,IAAI,EAAEC;EAAe,CAAC,GAAGN,OAAO,CAACO,mBAAmB,CAAC,CAAC;EAC9D,IAAIC,UAAU,GAAG,CAAC;EAElB,IAAIF,cAAc,EAAE;IAClBE,UAAU,GAAGF,cAAc,CAACG,MAAM;EACpC;;EAEA;EACA;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAS,CAAC,CAAC;EAC3C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAS,EAAE,CAAC;EAC9C;EACA,IAAIiB,SAAiB,GAAGC,IAAI,CAACC,IAAI,CAACR,UAAU,GAAGI,KAAK,CAAC;EAErD,oBACEV,OAAA,CAACJ,SAAS;IAACmB,SAAS,EAAC,WAAW;IAAAC,QAAA,eAC9BhB,OAAA,CAACH,GAAG;MAAAmB,QAAA,eACFhB,OAAA;QAAAgB,QAAA,eACEhB,OAAA;UAAIe,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAmC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAAClB,EAAA,CAxBID,WAAW;EAAA,QACkBH,OAAO,CAACO,mBAAmB;AAAA;AAAAgB,EAAA,GADxDpB,WAAW;AA0BjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}