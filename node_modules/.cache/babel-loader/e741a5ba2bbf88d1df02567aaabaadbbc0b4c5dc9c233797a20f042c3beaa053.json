{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects Ulbi\\\\redux-toolkit-typescript-3\\\\src\\\\components\\\\ui\\\\PaginationButtons.tsx\";\nimport React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PaginationButtons = _ref => {\n  let {\n    page,\n    pages,\n    countPage,\n    setPage\n  } = _ref;\n  // console.log(countPage);\n\n  const handleIncrement = () => {\n    if (page < countPage) {\n      setPage(page + 1);\n    }\n  };\n  const handleDecrement = () => {\n    if (page > 1) {\n      setPage(page - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: countPage > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerButton  mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-primary\",\n        onClick: handleDecrement,\n        children: \"Prev page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: countPage > 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"displayFlex flexWrap\",\n          children: pages.map(p => /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-primary\",\n            onClick: () => setPage(p),\n            active: p === page,\n            children: p\n          }, p, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-primary\",\n        onClick: handleIncrement,\n        children: \"Next page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_c = PaginationButtons;\nexport default PaginationButtons;\nvar _c;\n$RefreshReg$(_c, \"PaginationButtons\");","map":{"version":3,"names":["React","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","PaginationButtons","_ref","page","pages","countPage","setPage","handleIncrement","handleDecrement","children","className","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","p","active","_c","$RefreshReg$"],"sources":["C:/Projects Ulbi/redux-toolkit-typescript-3/src/components/ui/PaginationButtons.tsx"],"sourcesContent":["import React, { FC } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\ninterface IPaginationButtonsProps {\r\n  page: number;\r\n  pages: number[];\r\n  countPage: number;\r\n  setPage: React.Dispatch<React.SetStateAction<number>>;\r\n}\r\n\r\nconst PaginationButtons: FC<IPaginationButtonsProps> = ({ page, pages, countPage, setPage }) => {\r\n  // console.log(countPage);\r\n\r\n  const handleIncrement: () => void = () => {\r\n    if (page < countPage) {\r\n      setPage(page + 1);\r\n    }\r\n  };\r\n\r\n  const handleDecrement: () => void = () => {\r\n    if (page > 1) {\r\n      setPage(page - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {countPage > 1 && (\r\n        <div className=\"containerButton  mb-2\">\r\n          <Button variant=\"outline-primary\" onClick={handleDecrement}>\r\n            Prev page\r\n          </Button>\r\n\r\n          <div>\r\n            {countPage > 2 && (\r\n              <div className=\"displayFlex flexWrap\">\r\n                {pages.map((p) => (\r\n                  <Button variant=\"outline-primary\" onClick={() => setPage(p)} active={p === page} key={p}>\r\n                    {p}\r\n                  </Button>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <Button variant=\"outline-primary\" onClick={handleIncrement}>\r\n            Next page\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaginationButtons;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAc,OAAO;AACjC,SAASC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AASzC,MAAMC,iBAA8C,GAAGC,IAAA,IAAyC;EAAA,IAAxC;IAAEC,IAAI;IAAEC,KAAK;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAAJ,IAAA;EACzF;;EAEA,MAAMK,eAA2B,GAAGA,CAAA,KAAM;IACxC,IAAIJ,IAAI,GAAGE,SAAS,EAAE;MACpBC,OAAO,CAACH,IAAI,GAAG,CAAC,CAAC;IACnB;EACF,CAAC;EAED,MAAMK,eAA2B,GAAGA,CAAA,KAAM;IACxC,IAAIL,IAAI,GAAG,CAAC,EAAE;MACZG,OAAO,CAACH,IAAI,GAAG,CAAC,CAAC;IACnB;EACF,CAAC;EAED,oBACEL,OAAA,CAAAE,SAAA;IAAAS,QAAA,EACGJ,SAAS,GAAG,CAAC,iBACZP,OAAA;MAAKY,SAAS,EAAC,uBAAuB;MAAAD,QAAA,gBACpCX,OAAA,CAACF,MAAM;QAACe,OAAO,EAAC,iBAAiB;QAACC,OAAO,EAAEJ,eAAgB;QAAAC,QAAA,EAAC;MAE5D;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAETlB,OAAA;QAAAW,QAAA,EACGJ,SAAS,GAAG,CAAC,iBACZP,OAAA;UAAKY,SAAS,EAAC,sBAAsB;UAAAD,QAAA,EAClCL,KAAK,CAACa,GAAG,CAAEC,CAAC,iBACXpB,OAAA,CAACF,MAAM;YAACe,OAAO,EAAC,iBAAiB;YAACC,OAAO,EAAEA,CAAA,KAAMN,OAAO,CAACY,CAAC,CAAE;YAACC,MAAM,EAAED,CAAC,KAAKf,IAAK;YAAAM,QAAA,EAC7ES;UAAC,GADkFA,CAAC;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAE/E,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAENlB,OAAA,CAACF,MAAM;QAACe,OAAO,EAAC,iBAAiB;QAACC,OAAO,EAAEL,eAAgB;QAAAE,QAAA,EAAC;MAE5D;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EACN,gBACD,CAAC;AAEP,CAAC;AAACI,EAAA,GA1CInB,iBAA8C;AA4CpD,eAAeA,iBAAiB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}