{"ast":null,"code":"import axios from \"axios\";\nimport { userSlice } from \"./UserSlice\";\nexport const fetchUsers = async dispatch => {\n  try {\n    dispatch(userSlice.actions.usersFetching());\n    const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    dispatch(userSlice.actions.usersFetchingSuccess(response.data));\n  } catch (error) {\n    // dispatch(userSlice.actions.usersFetchingError(\"Произошла ошибка загрузки\"));\n    dispatch(userSlice.actions.usersFetchingError(error.message));\n  }\n};","map":{"version":3,"names":["axios","userSlice","fetchUsers","dispatch","actions","usersFetching","response","get","usersFetchingSuccess","data","error","usersFetchingError","message"],"sources":["C:/Projects Ulbi/redux-toolkit-typescript-3/src/store/reducers/ActionCreater.ts"],"sourcesContent":["import { IUser } from \"../../models/types\";\r\nimport { AppDispacth } from \"../store\";\r\nimport axios from \"axios\";\r\nimport { userSlice } from \"./UserSlice\";\r\n\r\nexport const fetchUsers = async (dispatch: AppDispacth) => {\r\n  try {\r\n    dispatch(userSlice.actions.usersFetching());\r\n    const response = await axios.get<IUser[]>(\"https://jsonplaceholder.typicode.com/users\");\r\n    dispatch(userSlice.actions.usersFetchingSuccess(response.data));\r\n  } catch (error: any) {\r\n    // dispatch(userSlice.actions.usersFetchingError(\"Произошла ошибка загрузки\"));\r\n    dispatch(userSlice.actions.usersFetchingError(error.message));\r\n  }\r\n};\r\n"],"mappings":"AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,aAAa;AAEvC,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAqB,IAAK;EACzD,IAAI;IACFA,QAAQ,CAACF,SAAS,CAACG,OAAO,CAACC,aAAa,CAAC,CAAC,CAAC;IAC3C,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAU,4CAA4C,CAAC;IACvFJ,QAAQ,CAACF,SAAS,CAACG,OAAO,CAACI,oBAAoB,CAACF,QAAQ,CAACG,IAAI,CAAC,CAAC;EACjE,CAAC,CAAC,OAAOC,KAAU,EAAE;IACnB;IACAP,QAAQ,CAACF,SAAS,CAACG,OAAO,CAACO,kBAAkB,CAACD,KAAK,CAACE,OAAO,CAAC,CAAC;EAC/D;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}