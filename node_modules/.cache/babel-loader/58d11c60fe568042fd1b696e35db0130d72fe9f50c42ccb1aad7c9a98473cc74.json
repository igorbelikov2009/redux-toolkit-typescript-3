{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects Ulbi\\\\redux-toolkit-typescript-3\\\\src\\\\pages\\\\PostApiPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Container, Row, Button } from \"react-bootstrap\";\nimport PaginationButtons from \"../components/ui/PaginationButtons\";\nimport MySelect from \"../components/ui/select/MySelect\";\nimport PostItem from \"../components/items/PostItem\";\nimport { postAPI } from \"../services/PostService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostApiPage = () => {\n  _s();\n  // PAGINATION\n  //================================================================================\n\n  const {\n    data\n  } = postAPI.useFetchAllPostQuery();\n  let totalCount = 0;\n  if (data) {\n    totalCount = data.length;\n  }\n  const [limit, setLimit] = useState(5);\n  const [page, setPage] = useState(1);\n  let countPage = Math.ceil(totalCount / limit);\n  const pages = [];\n  for (let i = 0; i < countPage; i++) {\n    pages.push(i + 1);\n  }\n  const {\n    data: posts,\n    error,\n    isLoading\n  } = postAPI.useGetPostByPageQuery(page);\n  // PAGINATION\n  //================================================================================\n\n  const [createPost, {\n    error: errorCreate\n  }] = postAPI.useCreatePostMutation();\n  const [updatePost, {\n    error: errorUpdate\n  }] = postAPI.useUpdatePostMutation();\n  const [deletePost, {\n    error: errorDelete\n  }] = postAPI.useDeletePostsMutation();\n  const handleCreate = async () => {\n    const title = prompt(\"Введите название поста\") || \"\";\n    const body = prompt(\"Ведите текст поста\") || \"\";\n    await createPost({\n      title,\n      body\n    });\n  };\n  const handleUpdate = post => {\n    updatePost(post);\n  };\n  const handleRemove = post => {\n    deletePost(post);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"card mt-6\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [posts && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"textCenter\",\n          children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u043E\\u0441\\u0442\\u043E\\u0432 \\u0438\\u0437 postAPI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-1 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textCenter\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-success\",\n              onClick: handleCreate,\n              children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u043E\\u0433\\u043E \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n            defaultValue: \"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\",\n            disabled: true,\n            options: options,\n            value: selectedSort,\n            onChangeValue: sortUsers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PaginationButtons, {\n            countPage: countPage,\n            page: page,\n            pages: pages,\n            setPage: setPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), posts && posts.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n        post: post,\n        remove: handleRemove,\n        update: handleUpdate\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 31\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(PostApiPage, \"7m9QvikP8vcbvOjvZ3klJddBFmE=\", false, function () {\n  return [postAPI.useFetchAllPostQuery, postAPI.useGetPostByPageQuery, postAPI.useCreatePostMutation, postAPI.useUpdatePostMutation, postAPI.useDeletePostsMutation];\n});\n_c = PostApiPage;\nexport default PostApiPage;\nvar _c;\n$RefreshReg$(_c, \"PostApiPage\");","map":{"version":3,"names":["React","useState","Container","Row","Button","PaginationButtons","MySelect","PostItem","postAPI","jsxDEV","_jsxDEV","PostApiPage","_s","data","useFetchAllPostQuery","totalCount","length","limit","setLimit","page","setPage","countPage","Math","ceil","pages","i","push","posts","error","isLoading","useGetPostByPageQuery","createPost","errorCreate","useCreatePostMutation","updatePost","errorUpdate","useUpdatePostMutation","deletePost","errorDelete","useDeletePostsMutation","handleCreate","title","prompt","body","handleUpdate","post","handleRemove","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","defaultValue","disabled","options","value","selectedSort","onChangeValue","sortUsers","map","remove","update","id","_c","$RefreshReg$"],"sources":["C:/Projects Ulbi/redux-toolkit-typescript-3/src/pages/PostApiPage.tsx"],"sourcesContent":["import React, { FC, useState } from \"react\";\r\nimport { Container, Row, Button } from \"react-bootstrap\";\r\nimport PaginationButtons from \"../components/ui/PaginationButtons\";\r\nimport MySelect from \"../components/ui/select/MySelect\";\r\nimport { IOption, IPost } from \"../models/types\";\r\nimport PostItem from \"../components/items/PostItem\";\r\nimport { postAPI } from \"../services/PostService\";\r\n\r\nconst PostApiPage = () => {\r\n  // PAGINATION\r\n  //================================================================================\r\n\r\n  const { data } = postAPI.useFetchAllPostQuery();\r\n  let totalCount = 0;\r\n\r\n  if (data) {\r\n    totalCount = data.length;\r\n  }\r\n\r\n  const [limit, setLimit] = useState<number>(5);\r\n  const [page, setPage] = useState<number>(1);\r\n  let countPage = Math.ceil(totalCount / limit);\r\n\r\n  const pages: number[] = [];\r\n  for (let i = 0; i < countPage; i++) {\r\n    pages.push(i + 1);\r\n  }\r\n\r\n  const { data: posts, error, isLoading } = postAPI.useGetPostByPageQuery(page);\r\n  // PAGINATION\r\n  //================================================================================\r\n\r\n  const [createPost, { error: errorCreate }] = postAPI.useCreatePostMutation();\r\n  const [updatePost, { error: errorUpdate }] = postAPI.useUpdatePostMutation();\r\n  const [deletePost, { error: errorDelete }] = postAPI.useDeletePostsMutation();\r\n\r\n  const handleCreate = async () => {\r\n    const title = prompt(\"Введите название поста\") || \"\";\r\n    const body = prompt(\"Ведите текст поста\") || \"\";\r\n\r\n    await createPost({ title, body } as IPost);\r\n  };\r\n\r\n  const handleUpdate = (post: IPost) => {\r\n    updatePost(post);\r\n  };\r\n  const handleRemove = (post: IPost) => {\r\n    deletePost(post);\r\n  };\r\n\r\n  return (\r\n    <Container className=\"card mt-6\">\r\n      <Row>\r\n        {posts && (\r\n          <div>\r\n            <h1 className=\"textCenter\">Список постов из postAPI</h1>\r\n            <div className=\"mt-1 mb-4\">\r\n              <div className=\"textCenter\">\r\n                <Button variant=\"outline-success\" onClick={handleCreate}>\r\n                  Добавить нового пользователя\r\n                </Button>\r\n              </div>\r\n\r\n              <MySelect\r\n                defaultValue=\"Сортировка\"\r\n                disabled={true}\r\n                options={options}\r\n                value={selectedSort}\r\n                onChangeValue={sortUsers}\r\n              />\r\n\r\n              <PaginationButtons countPage={countPage} page={page} pages={pages} setPage={setPage} />\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {posts &&\r\n          posts.map((post) => <PostItem key={post.id} post={post} remove={handleRemove} update={handleUpdate} />)}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PostApiPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}