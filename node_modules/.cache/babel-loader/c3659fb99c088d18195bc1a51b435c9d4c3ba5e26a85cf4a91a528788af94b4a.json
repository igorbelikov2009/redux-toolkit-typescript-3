{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects Ulbi\\\\redux-toolkit-typescript-3\\\\src\\\\pages\\\\PhotoApiPage.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useState } from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport { photoAPI } from \"../services/PhotoService\";\nimport PhotoItem from \"../components/items/PhotoItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PhotoApiPage = () => {\n  _s();\n  // Получаем массив всех фоток с сервера для определения общего количества фоток\n  const {\n    data: totalCountElem\n  } = photoAPI.useFetchAllPhotoQuery();\n  let totalCount = 0;\n  if (totalCountElem) {\n    totalCount = totalCountElem.length;\n  }\n  const [page, setPage] = useState(1);\n  const [limit, setLimit] = useState(10);\n  const countPage = Math.ceil(totalCount / limit);\n  const pages = [];\n  for (let i = 0; i < countPage; i++) {\n    pages.push(i + 1);\n  }\n  // Получаем массив фоток с сервера постранично\n  const {\n    data: photos,\n    isError,\n    isLoading\n  } = photoAPI.useGetAllPhotoByPageQuery(page);\n\n  // Получаем мутации\n  const [createPhoto, {\n    error: createError\n  }] = photoAPI.useCreatePhotoMutation();\n  const [updatePhoto, {\n    error: updateError\n  }] = photoAPI.useUpdatePhotoMutation();\n  const [deletePhoto, {\n    error: deleteError\n  }] = photoAPI.useDeletePhotoMutation();\n  const handleCreate = async () => {\n    const title = prompt(\"Введите название фото\") || \"\";\n    await createPhoto({\n      title,\n      url,\n      thumbnailUrl\n    });\n  };\n  const handleUpdate = photo => {\n    updatePhoto(photo);\n  };\n  const handleRemove = photo => {\n    deletePhoto(photo);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"card mt-6\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [photos && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"textCenter\",\n          children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0444\\u043E\\u0442\\u043E\\u043A \\u0438\\u0437 photoAPI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [isError && /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\"\\u0417\\u0430\\u043F\\u0443\\u0441\\u0442\\u0438 \\u043A\\u043E\\u043C\\u0430\\u043D\\u0434\\u0443 \\u0432 \\u043F\\u0430\\u0440\\u0440\\u0430\\u043B\\u0435\\u043B\\u044C\\u043D\\u043E\\u043C \\u0442\\u0435\\u0440\\u043C\\u0438\\u043D\\u0430\\u043B\\u0435:\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"colorRed\",\n              children: \" json-server --watch db.json --port 5000\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), createError && /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: \" \\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0438. \"\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), deleteError && /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: \" \\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u0443\\u0434\\u0430\\u043B\\u0435\\u043D\\u0438\\u0438. \"\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), updateError && /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: \" \\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u043E\\u0431\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u0438. \"\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: photos && photos.map(photo => /*#__PURE__*/_jsxDEV(PhotoItem, {\n          photo: photo,\n          update: handleUpdate,\n          remove: handleRemove\n        }, photo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(PhotoApiPage, \"3GJ3P9krl4VV+QgB7DUr8OGCX3k=\", false, function () {\n  return [photoAPI.useFetchAllPhotoQuery, photoAPI.useGetAllPhotoByPageQuery, photoAPI.useCreatePhotoMutation, photoAPI.useUpdatePhotoMutation, photoAPI.useDeletePhotoMutation];\n});\n_c = PhotoApiPage;\nexport default PhotoApiPage;\nvar _c;\n$RefreshReg$(_c, \"PhotoApiPage\");","map":{"version":3,"names":["React","useState","Container","Row","photoAPI","PhotoItem","jsxDEV","_jsxDEV","Fragment","_Fragment","PhotoApiPage","_s","data","totalCountElem","useFetchAllPhotoQuery","totalCount","length","page","setPage","limit","setLimit","countPage","Math","ceil","pages","i","push","photos","isError","isLoading","useGetAllPhotoByPageQuery","createPhoto","error","createError","useCreatePhotoMutation","updatePhoto","updateError","useUpdatePhotoMutation","deletePhoto","deleteError","useDeletePhotoMutation","handleCreate","title","prompt","url","thumbnailUrl","handleUpdate","photo","handleRemove","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","update","remove","id","_c","$RefreshReg$"],"sources":["C:/Projects Ulbi/redux-toolkit-typescript-3/src/pages/PhotoApiPage.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React, { FC, useState } from \"react\";\r\nimport { Container, Row, Button } from \"react-bootstrap\";\r\nimport { photoAPI } from \"../services/PhotoService\";\r\nimport { IPhoto, IOption } from \"../models/types\";\r\nimport PhotoItem from \"../components/items/PhotoItem\";\r\nimport MySelect from \"../components/ui/select/MySelect\";\r\nimport PaginationButtons from \"../components/ui/PaginationButtons\";\r\n\r\nconst PhotoApiPage = () => {\r\n  // Получаем массив всех фоток с сервера для определения общего количества фоток\r\n  const { data: totalCountElem } = photoAPI.useFetchAllPhotoQuery();\r\n  let totalCount = 0;\r\n  if (totalCountElem) {\r\n    totalCount = totalCountElem.length;\r\n  }\r\n\r\n  const [page, setPage] = useState<number>(1);\r\n  const [limit, setLimit] = useState<number>(10);\r\n  const countPage: number = Math.ceil(totalCount / limit);\r\n  const pages: number[] = [];\r\n  for (let i = 0; i < countPage; i++) {\r\n    pages.push(i + 1);\r\n  }\r\n  // Получаем массив фоток с сервера постранично\r\n  const { data: photos, isError, isLoading } = photoAPI.useGetAllPhotoByPageQuery(page);\r\n\r\n  // Получаем мутации\r\n  const [createPhoto, { error: createError }] = photoAPI.useCreatePhotoMutation();\r\n  const [updatePhoto, { error: updateError }] = photoAPI.useUpdatePhotoMutation();\r\n  const [deletePhoto, { error: deleteError }] = photoAPI.useDeletePhotoMutation();\r\n\r\n  const handleCreate = async () => {\r\n    const title = prompt(\"Введите название фото\") || \"\";\r\n\r\n    await createPhoto({ title, url, thumbnailUrl });\r\n  };\r\n  const handleUpdate = (photo: IPhoto) => {\r\n    updatePhoto(photo);\r\n  };\r\n  const handleRemove = (photo: IPhoto) => {\r\n    deletePhoto(photo);\r\n  };\r\n\r\n  return (\r\n    <Container className=\"card mt-6\">\r\n      <Row>\r\n        {photos && (\r\n          <div>\r\n            <h3 className=\"textCenter\">Список фоток из photoAPI</h3>\r\n          </div>\r\n        )}\r\n        <div>\r\n          <>\r\n            {isError && (\r\n              <h6>\r\n                Запусти команду в парралельном терминале:\r\n                <span className=\"colorRed\"> json-server --watch db.json --port 5000</span>\r\n              </h6>\r\n            )}\r\n\r\n            {createError && (\r\n              <h1>\r\n                <> Произошла ошибка при создании. </>\r\n              </h1>\r\n            )}\r\n            {deleteError && (\r\n              <h1>\r\n                <> Произошла ошибка при удалении. </>\r\n              </h1>\r\n            )}\r\n            {updateError && (\r\n              <h1>\r\n                <> Произошла ошибка при обновлении. </>\r\n              </h1>\r\n            )}\r\n          </>\r\n        </div>\r\n        <div className=\"post\">\r\n          {photos &&\r\n            photos.map((photo) => (\r\n              <PhotoItem key={photo.id} photo={photo} update={handleUpdate} remove={handleRemove} />\r\n            ))}\r\n        </div>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PhotoApiPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}