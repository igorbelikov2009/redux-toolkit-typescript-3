{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects Ulbi\\\\redux-toolkit-typescript-3\\\\src\\\\pages\\\\UserApiPage.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useState } from \"react\";\nimport { Container, Row, Button } from \"react-bootstrap\";\nimport PaginationButtons from \"../components/ui/PaginationButtons\";\nimport MySelect from \"../components/ui/select/MySelect\";\nimport UserItem from \"../components/items/UserItem\";\nimport { userAPI } from \"../services/UserService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserApiPage = _ref => {\n  _s();\n  let {\n    topOfPage\n  } = _ref;\n  //================================================================================\n  // PAGINATION\n  const {\n    data: totalCountElem\n  } = userAPI.useFetchAllUsersQuery();\n  let totalCount = 0;\n  if (totalCountElem) {\n    totalCount = totalCountElem.length;\n  }\n  // console.log(totalCount); // закомментировать\n\n  // Устанавливаем лимит показа юзеров на странице\n  const [limit, setLimit] = useState(5);\n\n  // Вычисляем количество страниц\n  let countPage = Math.ceil(totalCount / limit);\n  // console.log(countPage); // закомментировать\n\n  // Создаём массив pages[], состоящий из нумерации страниц, типа const pages = [1, 2, 3, 4, 5];\n  // Этот массив нужен нам для пагинации\n  const pages = [];\n  for (let i = 0; i < countPage; i++) {\n    pages.push(i + 1);\n  }\n  // console.log(pages); // закомментировать\n\n  const [page, setPage] = useState(1);\n  const {\n    data: users,\n    isError,\n    isLoading\n  } = userAPI.useGetUsersPaginationQuery(page);\n\n  // PAGINATION\n  //================================================================================\n\n  const handleCreate = async () => {};\n  const handleUpdate = user => {};\n  const handleRemove = user => {};\n  const handleTransition = () => {};\n\n  //==============================\n  // Сортировка\n  const options = [{\n    value: \"id\",\n    name: \"По номеру пользователя\"\n  }, {\n    value: \"name\",\n    name: \"По имени пользователя\"\n  }, {\n    value: \"username\",\n    name: \"По нику пользователя\"\n  }, {\n    value: \"email\",\n    name: \"По email пользователя\"\n  }, {\n    value: \"phone\",\n    name: \"По телефону пользователя\"\n  }, {\n    value: \"website\",\n    name: \"По website пользователя\"\n  }];\n  const [selectedSort, setSelectedSort] = useState(\"\");\n  function getSortedUsers() {\n    if (selectedSort && users) {\n      return [...users].sort((a, b) => a[selectedSort] > b[selectedSort] ? 1 : -1);\n    }\n    return users;\n  }\n  const sortedUsers = getSortedUsers();\n  const sortUsers = sort => {\n    setSelectedSort(sort);\n    // console.log(\"sort: \" + sort);\n  };\n  // Сортировка\n  //==============================\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"textCenter\",\n          children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439 \\u0438\\u0437 userAPI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"containerButton mt-1 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-info\",\n            onClick: handleTransition,\n            children: \"\\u0412 \\u043D\\u0430\\u0447\\u0430\\u043B\\u043E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u044B services createApi()\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-success mr-2 ml-2\",\n            onClick: handleCreate,\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u043E\\u0433\\u043E \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(MySelect, {\n              defaultValue: \"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\",\n              disabled: true,\n              options: options,\n              value: selectedSort,\n              onChangeValue: sortUsers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PaginationButtons, {\n          countPage: countPage,\n          page: page,\n          pages: pages,\n          setPage: setPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: isLoading && /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \" \\u0418\\u0434\\u0451\\u0442 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: isError && /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\"\\u0417\\u0430\\u043F\\u0443\\u0441\\u0442\\u0438 \\u043A\\u043E\\u043C\\u0430\\u043D\\u0434\\u0443 \\u0432 \\u043F\\u0430\\u0440\\u0440\\u0430\\u043B\\u0435\\u043B\\u044C\\u043D\\u043E\\u043C \\u0442\\u0435\\u0440\\u043C\\u0438\\u043D\\u0430\\u043B\\u0435:\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"colorRed\",\n              children: \" json-server --watch db.json --port 5000\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), sortedUsers && sortedUsers.map(user => /*#__PURE__*/_jsxDEV(UserItem, {\n          user: user,\n          update: handleUpdate,\n          remove: handleRemove\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(UserApiPage, \"W4HcXjPb5J84VpubyAw7IiONT64=\", false, function () {\n  return [userAPI.useFetchAllUsersQuery, userAPI.useGetUsersPaginationQuery];\n});\n_c = UserApiPage;\nexport default UserApiPage;\nvar _c;\n$RefreshReg$(_c, \"UserApiPage\");","map":{"version":3,"names":["React","useState","Container","Row","Button","PaginationButtons","MySelect","UserItem","userAPI","jsxDEV","_jsxDEV","UserApiPage","_ref","_s","topOfPage","data","totalCountElem","useFetchAllUsersQuery","totalCount","length","limit","setLimit","countPage","Math","ceil","pages","i","push","page","setPage","users","isError","isLoading","useGetUsersPaginationQuery","handleCreate","handleUpdate","user","handleRemove","handleTransition","options","value","name","selectedSort","setSelectedSort","getSortedUsers","sort","a","b","sortedUsers","sortUsers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","defaultValue","disabled","onChangeValue","map","update","remove","id","_c","$RefreshReg$"],"sources":["C:/Projects Ulbi/redux-toolkit-typescript-3/src/pages/UserApiPage.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React, { FC, useState } from \"react\";\r\nimport { Container, Row, Button } from \"react-bootstrap\";\r\nimport PaginationButtons from \"../components/ui/PaginationButtons\";\r\nimport MySelect from \"../components/ui/select/MySelect\";\r\nimport { IOption, IUser } from \"../models/types\";\r\nimport UserItem from \"../components/items/UserItem\";\r\nimport { userAPI } from \"../services/UserService\";\r\n\r\ninterface IUserApiPageProps {\r\n  topOfPage: () => void;\r\n}\r\n\r\nconst UserApiPage: FC<IUserApiPageProps> = ({ topOfPage }) => {\r\n  //================================================================================\r\n  // PAGINATION\r\n  const { data: totalCountElem } = userAPI.useFetchAllUsersQuery();\r\n  let totalCount = 0;\r\n\r\n  if (totalCountElem) {\r\n    totalCount = totalCountElem.length;\r\n  }\r\n  // console.log(totalCount); // закомментировать\r\n\r\n  // Устанавливаем лимит показа юзеров на странице\r\n  const [limit, setLimit] = useState<number>(5);\r\n\r\n  // Вычисляем количество страниц\r\n  let countPage: number = Math.ceil(totalCount / limit);\r\n  // console.log(countPage); // закомментировать\r\n\r\n  // Создаём массив pages[], состоящий из нумерации страниц, типа const pages = [1, 2, 3, 4, 5];\r\n  // Этот массив нужен нам для пагинации\r\n  const pages: number[] = [];\r\n  for (let i = 0; i < countPage; i++) {\r\n    pages.push(i + 1);\r\n  }\r\n  // console.log(pages); // закомментировать\r\n\r\n  const [page, setPage] = useState<number>(1);\r\n  const { data: users, isError, isLoading } = userAPI.useGetUsersPaginationQuery(page);\r\n\r\n  // PAGINATION\r\n  //================================================================================\r\n\r\n  const handleCreate = async () => {};\r\n  const handleUpdate = (user: IUser) => {};\r\n  const handleRemove = (user: IUser) => {};\r\n  const handleTransition = () => {};\r\n\r\n  //==============================\r\n  // Сортировка\r\n  const options: IOption[] = [\r\n    { value: \"id\", name: \"По номеру пользователя\" },\r\n    { value: \"name\", name: \"По имени пользователя\" },\r\n    { value: \"username\", name: \"По нику пользователя\" },\r\n    { value: \"email\", name: \"По email пользователя\" },\r\n    { value: \"phone\", name: \"По телефону пользователя\" },\r\n    { value: \"website\", name: \"По website пользователя\" },\r\n  ];\r\n  const [selectedSort, setSelectedSort] = useState<string>(\"\");\r\n\r\n  function getSortedUsers() {\r\n    if (selectedSort && users) {\r\n      return [...users].sort((a, b) => (a[selectedSort] > b[selectedSort] ? 1 : -1));\r\n    }\r\n    return users;\r\n  }\r\n\r\n  const sortedUsers = getSortedUsers();\r\n\r\n  const sortUsers = (sort: string) => {\r\n    setSelectedSort(sort);\r\n    // console.log(\"sort: \" + sort);\r\n  };\r\n  // Сортировка\r\n  //==============================\r\n\r\n  return (\r\n    <Container className=\"card\">\r\n      <Row>\r\n        <div>\r\n          <h1 className=\"textCenter\">Список пользователей из userAPI</h1>\r\n\r\n          <div className=\"containerButton mt-1 mb-4\">\r\n            <Button variant=\"outline-info\" onClick={handleTransition}>\r\n              В начало страницы services createApi()\r\n            </Button>\r\n\r\n            <Button variant=\"outline-success mr-2 ml-2\" onClick={handleCreate}>\r\n              Добавить нового пользователя\r\n            </Button>\r\n\r\n            <div>\r\n              <MySelect\r\n                defaultValue=\"Сортировка\"\r\n                disabled={true}\r\n                options={options}\r\n                value={selectedSort}\r\n                onChangeValue={sortUsers}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <PaginationButtons countPage={countPage} page={page} pages={pages} setPage={setPage} />\r\n\r\n          <div>{isLoading && <h1> Идёт загрузка </h1>}</div>\r\n\r\n          <div>\r\n            {isError && (\r\n              <h6>\r\n                Запусти команду в парралельном терминале:\r\n                <span className=\"colorRed\"> json-server --watch db.json --port 5000</span>\r\n              </h6>\r\n            )}\r\n          </div>\r\n\r\n          {sortedUsers &&\r\n            sortedUsers.map((user) => (\r\n              <UserItem key={user.id} user={user} update={handleUpdate} remove={handleRemove} />\r\n            ))}\r\n        </div>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UserApiPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}