{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects Ulbi\\\\redux-toolkit-typescript-3\\\\src\\\\pages\\\\UserApiPage.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useState } from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport { userAPI } from \"../services/UserService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserApiPage = _ref => {\n  _s();\n  let {\n    topOfPage\n  } = _ref;\n  //================================================================================\n  // PAGINATION\n  const {\n    data: totalCountElem\n  } = userAPI.useFetchAllUsersQuery();\n  let totalCount = 0;\n  if (totalCountElem) {\n    totalCount = totalCountElem.length;\n  }\n  console.log(totalCount); // закомментировать\n\n  // Устанавливаем лимит показа юзеров на странице\n  const [limit, setLimit] = useState(5);\n\n  // Вычисляем количество страниц\n  let countPage = Math.ceil(totalCount / limit);\n  console.log(countPage); // закомментировать\n  // Создаём массив pages[], состоящий из нумерации страниц, типа const pages = [1, 2, 3, 4, 5];\n  // Этот массив нужен нам для пагинации\n  const pages = [];\n  for (let i = 0; i < countPage; i++) {\n    pages.push(i + 1);\n  }\n  console.log(pages); // закомментировать\n  const [page, setPage] = useState(1);\n  const {\n    data: users,\n    isError,\n    isLoading\n  } = userAPI.useGetUsersPaginationQuery(page);\n\n  // PAGINATION\n  //================================================================================\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"textCenter\",\n          children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439 \\u0438\\u0437 userAPI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(UserApiPage, \"6ToyebiY0aiZo7h8a02wpZwslsk=\", false, function () {\n  return [userAPI.useFetchAllUsersQuery, userAPI.useGetUsersPaginationQuery];\n});\n_c = UserApiPage;\nexport default UserApiPage;\nvar _c;\n$RefreshReg$(_c, \"UserApiPage\");","map":{"version":3,"names":["React","useState","Container","Row","userAPI","jsxDEV","_jsxDEV","UserApiPage","_ref","_s","topOfPage","data","totalCountElem","useFetchAllUsersQuery","totalCount","length","console","log","limit","setLimit","countPage","Math","ceil","pages","i","push","page","setPage","users","isError","isLoading","useGetUsersPaginationQuery","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Projects Ulbi/redux-toolkit-typescript-3/src/pages/UserApiPage.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React, { FC, useState } from \"react\";\r\nimport { Container, Row, Button } from \"react-bootstrap\";\r\nimport PaginationButtons from \"../components/ui/PaginationButtons\";\r\nimport MySelect from \"../components/ui/select/MySelect\";\r\nimport { IOption } from \"../models/types\";\r\nimport UserItem from \"../components/items/UserItem\";\r\nimport { userAPI } from \"../services/UserService\";\r\n\r\ninterface IUserApiPageProps {\r\n  topOfPage: () => void;\r\n}\r\n\r\nconst UserApiPage: FC<IUserApiPageProps> = ({ topOfPage }) => {\r\n  //================================================================================\r\n  // PAGINATION\r\n  const { data: totalCountElem } = userAPI.useFetchAllUsersQuery();\r\n  let totalCount = 0;\r\n\r\n  if (totalCountElem) {\r\n    totalCount = totalCountElem.length;\r\n  }\r\n  console.log(totalCount); // закомментировать\r\n\r\n  // Устанавливаем лимит показа юзеров на странице\r\n  const [limit, setLimit] = useState<number>(5);\r\n\r\n  // Вычисляем количество страниц\r\n  let countPage: number = Math.ceil(totalCount / limit);\r\n  console.log(countPage); // закомментировать\r\n  // Создаём массив pages[], состоящий из нумерации страниц, типа const pages = [1, 2, 3, 4, 5];\r\n  // Этот массив нужен нам для пагинации\r\n  const pages: number[] = [];\r\n  for (let i = 0; i < countPage; i++) {\r\n    pages.push(i + 1);\r\n  }\r\n  console.log(pages); // закомментировать\r\n  const [page, setPage] = useState<number>(1);\r\n  const { data: users, isError, isLoading } = userAPI.useGetUsersPaginationQuery(page);\r\n\r\n  // PAGINATION\r\n  //================================================================================\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <div>\r\n          <h1 className=\"textCenter\">Список пользователей из userAPI</h1>\r\n        </div>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UserApiPage;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAQC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,EAAEC,GAAG,QAAgB,iBAAiB;AAKxD,SAASC,OAAO,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMlD,MAAMC,WAAkC,GAAGC,IAAA,IAAmB;EAAAC,EAAA;EAAA,IAAlB;IAAEC;EAAU,CAAC,GAAAF,IAAA;EACvD;EACA;EACA,MAAM;IAAEG,IAAI,EAAEC;EAAe,CAAC,GAAGR,OAAO,CAACS,qBAAqB,CAAC,CAAC;EAChE,IAAIC,UAAU,GAAG,CAAC;EAElB,IAAIF,cAAc,EAAE;IAClBE,UAAU,GAAGF,cAAc,CAACG,MAAM;EACpC;EACAC,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC,CAAC,CAAC;;EAEzB;EACA,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAS,CAAC,CAAC;;EAE7C;EACA,IAAImB,SAAiB,GAAGC,IAAI,CAACC,IAAI,CAACR,UAAU,GAAGI,KAAK,CAAC;EACrDF,OAAO,CAACC,GAAG,CAACG,SAAS,CAAC,CAAC,CAAC;EACxB;EACA;EACA,MAAMG,KAAe,GAAG,EAAE;EAC1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,SAAS,EAAEI,CAAC,EAAE,EAAE;IAClCD,KAAK,CAACE,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC;EACnB;EACAR,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC,CAAC,CAAC;EACpB,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAG1B,QAAQ,CAAS,CAAC,CAAC;EAC3C,MAAM;IAAEU,IAAI,EAAEiB,KAAK;IAAEC,OAAO;IAAEC;EAAU,CAAC,GAAG1B,OAAO,CAAC2B,0BAA0B,CAACL,IAAI,CAAC;;EAEpF;EACA;;EAEA,oBACEpB,OAAA,CAACJ,SAAS;IAAA8B,QAAA,eACR1B,OAAA,CAACH,GAAG;MAAA6B,QAAA,eACF1B,OAAA;QAAA0B,QAAA,eACE1B,OAAA;UAAI2B,SAAS,EAAC,YAAY;UAAAD,QAAA,EAAC;QAA+B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAAC5B,EAAA,CAvCIF,WAAkC;EAAA,QAGLH,OAAO,CAACS,qBAAqB,EAsBlBT,OAAO,CAAC2B,0BAA0B;AAAA;AAAAO,EAAA,GAzB1E/B,WAAkC;AAyCxC,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}