{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/dist/query/react\";\nexport const albumApi = createApi({\n  reducerPath: \"albumApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"http://localhost:5000\"\n  }),\n  tagTypes: [\"Album\"],\n  endpoints: build => ({\n    // Эндпоинт получения:_____\n    fetchAllAlbums: build.query({\n      query: function () {\n        let limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n        return {\n          url: \"/albums\",\n          params: {\n            _limit: limit\n          }\n        };\n      },\n      providesTags: result => [\"Album\"] // указываем, что эндпоинт fetchAllAlbums\n      // работает с тэгом [\"Album\"]\n    }),\n\n    // Эндпоинт создания:_____\n    createAlbum: build.mutation({\n      query: album => ({\n        url: \"/albums\",\n        method: \"POST\",\n        body: album\n      }),\n      invalidatesTags: [\"Album\"] // прежние данные делаем неактуальными при помощи\n      // этого тэга\n    }),\n\n    // Эндпоинт обновления:_____\n    updateAlbum: build.mutation({\n      query: album => ({\n        // указываем id, который мы ходим обновить\n        url: `/albums/${album.id}`,\n        method: \"PUT\",\n        body: album\n      }),\n      invalidatesTags: [\"Album\"] // прежние данные делаем неактуальными при помощи\n      // этого тэга\n    }),\n\n    // Эндпоинт удаления:_____\n    deleteAlbum: build.mutation({\n      query: album => ({\n        // указываем id, который мы ходим удалить\n        url: `/albums/${album.id}`,\n        method: \"DELETE\"\n      }),\n      invalidatesTags: [\"Album\"] // прежние данные делаем неактуальными при помощи\n      // этого тэга\n    })\n  })\n});\n\n//\n// Нам необходимо зарегистрировать редюсер в store.ts\n// и, там же, добавить мидлвеер из нашего albumAPI","map":{"version":3,"names":["createApi","fetchBaseQuery","albumApi","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","build","fetchAllAlbums","query","limit","arguments","length","undefined","url","params","_limit","providesTags","result","createAlbum","mutation","album","method","body","invalidatesTags","updateAlbum","id","deleteAlbum"],"sources":["C:/Projects Ulbi/redux-toolkit-typescript-3/src/services/AlbumService.ts"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/dist/query/react\";\r\nimport { IAlbum } from \"../models/types\";\r\n\r\nexport const albumApi = createApi({\r\n  reducerPath: \"albumApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl: \"http://localhost:5000\" }),\r\n  tagTypes: [\"Album\"],\r\n  endpoints: (build) => ({\r\n    // Эндпоинт получения:_____\r\n    fetchAllAlbums: build.query<IAlbum[], number>({\r\n      query: (limit: number = 10) => ({\r\n        url: \"/albums\",\r\n        params: {\r\n          _limit: limit,\r\n        },\r\n      }),\r\n      providesTags: (result) => [\"Album\"], // указываем, что эндпоинт fetchAllAlbums\r\n      // работает с тэгом [\"Album\"]\r\n    }),\r\n    // Эндпоинт создания:_____\r\n    createAlbum: build.mutation<IAlbum, IAlbum>({\r\n      query: (album) => ({\r\n        url: \"/albums\",\r\n        method: \"POST\",\r\n        body: album,\r\n      }),\r\n      invalidatesTags: [\"Album\"], // прежние данные делаем неактуальными при помощи\r\n      // этого тэга\r\n    }),\r\n    // Эндпоинт обновления:_____\r\n    updateAlbum: build.mutation<IAlbum, IAlbum>({\r\n      query: (album) => ({\r\n        // указываем id, который мы ходим обновить\r\n        url: `/albums/${album.id}`,\r\n        method: \"PUT\",\r\n        body: album,\r\n      }),\r\n      invalidatesTags: [\"Album\"], // прежние данные делаем неактуальными при помощи\r\n      // этого тэга\r\n    }),\r\n    // Эндпоинт удаления:_____\r\n    deleteAlbum: build.mutation<IAlbum, IAlbum>({\r\n      query: (album) => ({\r\n        // указываем id, который мы ходим удалить\r\n        url: `/albums/${album.id}`,\r\n        method: \"DELETE\",\r\n      }),\r\n      invalidatesTags: [\"Album\"], // прежние данные делаем неактуальными при помощи\r\n      // этого тэга\r\n    }),\r\n  }),\r\n});\r\n\r\n//\r\n// Нам необходимо зарегистрировать редюсер в store.ts\r\n// и, там же, добавить мидлвеер из нашего albumAPI\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,mCAAmC;AAG7E,OAAO,MAAMC,QAAQ,GAAGF,SAAS,CAAC;EAChCG,WAAW,EAAE,UAAU;EACvBC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAE;EAAwB,CAAC,CAAC;EAC/DC,QAAQ,EAAE,CAAC,OAAO,CAAC;EACnBC,SAAS,EAAGC,KAAK,KAAM;IACrB;IACAC,cAAc,EAAED,KAAK,CAACE,KAAK,CAAmB;MAC5CA,KAAK,EAAE,SAAAA,CAAA;QAAA,IAACC,KAAa,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;QAAA,OAAM;UAC9BG,GAAG,EAAE,SAAS;UACdC,MAAM,EAAE;YACNC,MAAM,EAAEN;UACV;QACF,CAAC;MAAA,CAAC;MACFO,YAAY,EAAGC,MAAM,IAAK,CAAC,OAAO,CAAC,CAAE;MACrC;IACF,CAAC,CAAC;;IACF;IACAC,WAAW,EAAEZ,KAAK,CAACa,QAAQ,CAAiB;MAC1CX,KAAK,EAAGY,KAAK,KAAM;QACjBP,GAAG,EAAE,SAAS;QACdQ,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEF;MACR,CAAC,CAAC;MACFG,eAAe,EAAE,CAAC,OAAO,CAAC,CAAE;MAC5B;IACF,CAAC,CAAC;;IACF;IACAC,WAAW,EAAElB,KAAK,CAACa,QAAQ,CAAiB;MAC1CX,KAAK,EAAGY,KAAK,KAAM;QACjB;QACAP,GAAG,EAAG,WAAUO,KAAK,CAACK,EAAG,EAAC;QAC1BJ,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEF;MACR,CAAC,CAAC;MACFG,eAAe,EAAE,CAAC,OAAO,CAAC,CAAE;MAC5B;IACF,CAAC,CAAC;;IACF;IACAG,WAAW,EAAEpB,KAAK,CAACa,QAAQ,CAAiB;MAC1CX,KAAK,EAAGY,KAAK,KAAM;QACjB;QACAP,GAAG,EAAG,WAAUO,KAAK,CAACK,EAAG,EAAC;QAC1BJ,MAAM,EAAE;MACV,CAAC,CAAC;MACFE,eAAe,EAAE,CAAC,OAAO,CAAC,CAAE;MAC5B;IACF,CAAC;EACH,CAAC;AACH,CAAC,CAAC;;AAEF;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}